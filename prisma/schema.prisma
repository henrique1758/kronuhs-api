generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  firstName String
  lastName  String
  email     String @unique
  password  String

  posts            Post[]
  comments         Comment[]
  user_permissions User_Permission[]
  user_roles User_Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id String @id @default(uuid())

  name String @unique

  posts Post[]

  createdAt DateTime @default(now())

  @@map("categories")
}

model Post {
  id String @id @default(uuid())

  title    String
  subtitle String
  content  String

  comments Comment[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  author   User?   @relation(fields: [authorId], references: [id])
  authorId String?

  createdAt DateTime @default(now())

  @@map("posts")
}

model Comment {
  id String @id @default(uuid())

  content String

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  post   Post?   @relation(fields: [postId], references: [id])
  postId String?

  createdAt DateTime @default(now())

  @@map("comments")
}

model Permission {
  id String @id @default(uuid())

  name String @unique

  permissions_roles Permission_Role[]

  createdAt DateTime @default(now())

  user_permissions User_Permission[]

  @@map("permissions")
}

model Role {
  id String @id @default(uuid())

  name String @unique

  permissions_roles Permission_Role[]

  createdAt DateTime @default(now())

  user_roles User_Role[]

  @@map("roles")
}

model Permission_Role {
  id String @id @default(uuid())

  permission   Permission? @relation(fields: [permissionId], references: [id])
  permissionId String?

  role   Role?   @relation(fields: [roleId], references: [id])
  roleId String?

  @@map("permissions_roles")
}

model User_Permission {
  id String @id @default(uuid())

  permission   Permission? @relation(fields: [permissionId], references: [id])
  permissionId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("user_permissions")
}

model User_Role {
  id String @id @default(uuid())

  role   Role?   @relation(fields: [roleId], references: [id])
  roleId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("user_roles")
}